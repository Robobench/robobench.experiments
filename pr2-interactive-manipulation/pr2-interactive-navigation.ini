[environment]
# You may need to change your "RELEASE_PREFIX" and "SCRIPT_PATH"
RELEASE_PREFIX=$toolkit_dir
ROS=groovy
ROS_BIN=/opt/ros/groovy/bin
PIM_DATA=$toolkit_dir/etc/robobench-experiments/pr2-interactive-manipulation
WORLD_LAUNCH = $PIM_DATA/wg_collada_world.launch
MAP_MODEL = $PIM_DATA/urdf/wg_collada.urdf
ROBOT_INITIAL_POSE = -x 25.0 -y 15
MAP_FILE= $PIM_DATA/maps/willowMap2_50mm.yaml
ROBOT=sim
SIM_TIME_RATIO=.1



[component-1]
# start gazebo 
name = gazebo_wg_world
command = roslaunch $WORLD_LAUNCH map_file:=$MAP_MODEL
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 60,2
blocking = True,True
ongoing = False,False
criteria = process has finished cleanly,

[component-2]
# PR2
name = pr2_spawn
command = roslaunch pr2_gazebo pr2.launch
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 60,2
blocking = True,True
ongoing = False,False
criteria = successfully spawned, 

[component-3]
# PR2 Interactive Manipulation Robot
name = pr2_im_robot
command = roslaunch pr2_interactive_manipulation pr2_interactive_manipulation_robot.launch sim:=true nav:=true 
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 60,2
blocking = True,True
ongoing = False,False
criteria = Started trajectory filter server,

[component-4]
# PR2 Map server
name = map_server
command = rosrun map_server map_server $MAP_FILE
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 60,2
blocking = True,True
ongoing = False,False
criteria = Read a,

[component-5]
# PR2 Interactive Manipulation Frontend
name = pr2_im_frontend
command = roslaunch pr2_interactive_manipulation_frontend pr2_interactive_manipulation_desktop.launch sim:=true nav:=true rviz_config_file_base:=$PIM_DATA/config/pr2_im_gazebo.rviz 
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 2,20
blocking = True,True
ongoing = False,False
criteria = ,No task number specified for grasping study

[component-6]
name = initialize_pose
command = rostopic pub /initialpose geometry_msgs/PoseWithCovarianceStamped -f $PIM_DATA/msgs/initial_pose.yml 
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 10,10
blocking = True,True
ongoing = False,False
criteria = publishing and latching message,

[component-7]
name = wait_for_rviz
command = rostopic echo -n 1 /pr2_nav_marker_control/update 
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 1,60
blocking = True,True
ongoing = False,False
criteria = ,server_id: /pr2_interactive_nav_action/nav_action

[component-8]
name=tuck_arms
command=  rostopic pub /tuck_arms/goal pr2_common_action_msgs/TuckArmsActionGoal -f $PIM_DATA/msgs/tuck_arms.yml
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid
timeout = 1
blocking = True
ongoing = False
criteria =

[component-9]
name=wait_for_tuck
command = rostopic echo -n 1 /tuck_arms/result
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 1,600
blocking = True,True
ongoing = False,False
criteria = ,status: 3

[component-10]
name=send_nav_goal
command=  rostopic pub /move_base/goal move_base_msgs/MoveBaseActionGoal -f $PIM_DATA/msgs/move_base.yml
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid
timeout = 1
blocking = True
ongoing = False
criteria =


[component-11]
name = wait_for_navigation
command = rostopic echo -n 1 /move_base/result
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 1,600
blocking = True,True
ongoing = False,False
criteria = ,text: 


[component-12]
name = oprofile
command = operf --callgraph --system-wide --separate-thread --lazy-conversion --session-dir=/tmp
path = $toolkit_dir/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 5
ongoing = False
blocking = False
criteria = 

[component-13]
name = opreport
command = opreport 
path = $toolkit_dir/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 10
ongoing = False
blocking = True
criteria =

[component-14]
name = killperf
command = bash $RELEASE_PREFIX/bin/kill_operf.bash 
path = /bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
ongoing = False,False
blocking = True,True
criteria = ,done

[component-15]
name = wait_for_navigation_successful
command = rostopic echo -n 1 /move_base/result
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 1,600
blocking = True,True
ongoing = False,False
criteria = ,text: Goal reached.

[component-16]
name = clear_costmap
command = rosservice call /move_base_node/clear_costmaps 
path = $ROS_BIN
execution_host = localhost
check_execution = True
check_type = pid
timeout = 1
blocking = True
ongoing = False
criteria = 


[run]
name = pr2-interactive-navigation
run_order = ('gazebo_wg_world', 'pr2_spawn', 'pr2_im_robot', 'map_server', 'pr2_im_frontend',  'initialize_pose', 'oprofile', 'tuck_arms', 'wait_for_tuck','clear_costmap','send_nav_goal', 'wait_for_navigation', 'killperf',),
run_execution_duration = 5
result_assessment_order = ('opreport',),
result_assessment_execution_duration = 1

[environment]
# You may need to change your "RELEASE_PREFIX" and "SCRIPT_PATH"
RELEASE_PREFIX = $toolkit_dir
SCRIPT_PATH = $toolkit_dir/etc/fsmt-experiments/morse-CNM-1.2.1
PYTHONPATH = $toolkit_dir/lib/python3/dist-packages/:$PYTHONPATH

[component-1]
# Start the MORSE scenario
name = morse
command = morse run --geometry 1280x800 $RELEASE_PREFIX/bin/cat_mouse_game.py
path = $RELEASE_PREFIX/bin/
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 60,2
blocking = True,True
ongoing = False,True
criteria = SCENE INITIALIZED,

[component-2]
# Setup the cat robot and make it follow the mouse robot
name = cat
command = python3 $RELEASE_PREFIX/bin/cat_script.py
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 2
blocking = True
ongoing = True
criteria =

[component-3]
# Setup the mouse robot and make it run
name = mouse
command = python3 $RELEASE_PREFIX/bin/mouse_script.py
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 2
blocking = True
ongoing = True
criteria =

[component-4]
# Assess the cat output if it has lost the mouse at some point,
# if so, the test is declared as FAILED
name = assess_cat_log
command = sh $RELEASE_PREFIX/bin/assess_cat_log.sh
path = /bin/
execution_host = localhost
check_execution = True
check_type = stdoutexclude
timeout = 5
blocking = True
ongoing = True
criteria = MOUSE LOST,

[component-5]
name = sleep30
command = python2.7 $prefix/bin/fsmt_exouttimed 30 10
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 1,25
blocking = True,True
ongoing = False,False
criteria = ,FINDME


[component-6]
name = oprofile
command = bash $prefix/bin/operf_script.bash
path = /bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 5,120
ongoing = False,False
blocking = True,True
criteria = ,done

[component-7]
name = opreport
command = opreport 
path = $prefix/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 10
ongoing = False
blocking = True
criteria =

[component-8]
name = killperf
command = killall -s SIGINT operf
path = /usr/bin/
execution_host = localhost
check_execution = True
check_type = pid
timeout = 10
ongoing = False
blocking = True
criteria = 


[run]
name = MORSE-CNM-1.2.1
run_order = ([('oprofile',),('morse', 'cat', 'mouse', 'sleep30','killperf'),]),
run_execution_duration = 30
result_assessment_order = ('assess_cat_log','opreport'),
result_assessment_execution_duration = 1

[environment]
# You may need to change your "PREFIX"
RELEASE_PREFIX=$toolkit_dir
EXP_DATA=$toolkit_dir/etc/robobench-experiments/tum-simulation
ROBOT = sim
PATH=$PATH:$toolkit_dir/bin/
TOOLKIT_BIN=$toolkit_dir/bin/
ROS=hydro

[component-1]
name = roscore
command = roscore
path = /opt/ros/$ROS/bin/
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 30,2
blocking = True,True
ongoing = False,True
criteria = started core service [/rosout],


[component-2]
name = tum_gazebo
command = roslaunch cvg_sim_gazebo ardrone_testworld.launch
path = /opt/ros/$ROS/bin/
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 30,2
blocking = True,True
ongoing = False,True
criteria = Physics dynamic reconfigure ready.,

[component-3]
name = oprofile
command = operf --system-wide --separate-thread --lazy-conversion
path = $RELEASE_PREFIX/bin
execution_host = localhost
check_execution = True
check_type = pid
timeout = 2
ongoing = False
blocking = True
criteria =

[component-4]
name = drone_autopilot
command = rosrun tum_ardrone drone_autopilot
path = /opt/ros/$ROS/bin/
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 30,2
blocking = True,True
ongoing = False,False
criteria = Started TUM ArDrone Autopilot Node,

[component-5]
name = drone_state_estimation
command = rosrun tum_ardrone drone_stateestimation
path = /opt/ros/$ROS/bin/
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 30,2
blocking = True,True
ongoing = False,False
criteria = Video resolution:,

[component-6]
name = drone_send_flightplan
command = send_flight_plan $EXP_DATA/demo_commands.txt
path = $TOOLKIT_BIN
execution_host = localhost
check_execution = True
check_type = stdout,pid
timeout = 30,2
blocking = True,True
ongoing = False,False
criteria = stop, 


[component-7]
name = oprofile
command = operf --system-wide --separate-thread --lazy-conversion --callgraph
path = $RELEASE_PREFIX/bin
execution_host = localhost
check_execution = True
check_type = pid
timeout = 2
ongoing = False
blocking = True
criteria =

[component-8]
name = killperf
command = bash $RELEASE_PREFIX/bin/kill_operf.bash 
path = /bin/
execution_host = localhost
check_execution = True
check_type = pid,stdout
timeout = 10,30
ongoing = False,False
blocking = True,True
criteria = ,done



[run]
name = tum-simulation-profile
run_order = ('roscore', 'tum_gazebo', 'oprofile', 'drone_autopilot', 'drone_state_estimation', 'drone_send_flightplan','killperf',),
run_execution_duration = 1
result_assessment_order = ('opreport',),
result_assessment_execution_duration = 30
